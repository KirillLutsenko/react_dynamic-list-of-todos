{"version":3,"sources":["components/Search/Search.jsx","components/Select/Select.jsx","components/TodoList/TodoList.jsx","api/api.jsx","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["Search","checkQuery","className","type","placeholder","onChange","Select","handleStatus","value","TodoList","todos","query","isTaskDone","selectedTask","handleUser","filtredTasks","filter","title","completed","comtareText","toLowerCase","includes","map","id","userId","key","classNames","checked","readOnly","onClick","getUser","fetch","then","prepareResponse","getData","response","json","result","data","CurrentUser","state","user","this","props","setState","prevProps","name","email","phone","PureComponent","App","selectedUserId","event","target","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6ad8d07e.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Search.scss';\n\nexport const Search = ({ checkQuery }) => (\n  <div className=\"ui input\">\n    <input\n      type=\"text\"\n      placeholder=\"Type search task\"\n      onChange={checkQuery}\n    />\n  </div>\n);\n\nSearch.propTypes = {\n  checkQuery: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Select = ({ handleStatus }) => (\n  <select className=\"ui selection dropdown\" onChange={handleStatus}>\n    <option value=\"\">\n      All\n    </option>\n    <option value=\"false\">\n      Active\n    </option>\n    <option value=\"true\">\n      Completed\n    </option>\n  </select>\n);\n\nSelect.propTypes = {\n  handleStatus: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport { Search } from '../Search/Search';\nimport { Select } from '../Select/Select';\n\nimport './TodoList.scss';\n\nexport const TodoList = ({\n  todos,\n  query,\n  isTaskDone,\n  selectedTask,\n  handleUser,\n  handleStatus,\n  checkQuery,\n}) => {\n  const filtredTasks = todos.filter(({ title, completed }) => {\n    const comtareText = () => title.toLowerCase().includes(query);\n\n    if (isTaskDone === 'true') {\n      return comtareText() && completed;\n    }\n\n    if (isTaskDone === 'false') {\n      return comtareText() && !completed;\n    }\n\n    return comtareText();\n  });\n\n  return (\n    <div className=\"TodoList\">\n      <h2>Todos:</h2>\n\n      <Search checkQuery={checkQuery} />\n      <Select handleStatus={handleStatus} />\n\n      <div className=\"TodoList__list-container\">\n        <ul className=\"TodoList__list\">\n          {filtredTasks.map(({ id, title, completed, userId }) => (\n            <li\n              key={id}\n              className={classNames(\n                'TodoList__item', {\n                  'TodoList__item--unchecked': !completed,\n                  'TodoList__item--checked': completed,\n                },\n              )}\n            >\n              <label>\n                <input\n                  type=\"checkbox\"\n                  checked={completed}\n                  readOnly\n                />\n                <p>{title}</p>\n              </label>\n\n              <button\n                className={classNames(\n                  'TodoList__user-button',\n                  { 'TodoList__user-button--selected': selectedTask === title },\n                  'button',\n                )}\n                type=\"button\"\n                onClick={() => handleUser(userId, title)}\n              >\n                {`User${'\\u00A0'}#${userId}`}\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      completed: PropTypes.bool.isRequired,\n      userId: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n  query: PropTypes.string.isRequired,\n  isTaskDone: PropTypes.string.isRequired,\n  selectedTask: PropTypes.string.isRequired,\n  handleUser: PropTypes.func.isRequired,\n  handleStatus: PropTypes.func.isRequired,\n  checkQuery: PropTypes.func.isRequired,\n};\n","const API_URL_TODOS = 'https://mate-api.herokuapp.com/todos';\nconst API_URL_USERS = 'https://mate-api.herokuapp.com/users/';\n\nexport function getToDos() {\n  return fetch(API_URL_TODOS)\n    .then(prepareResponse)\n    .then(getData);\n}\n\nexport function getUser(userId) {\n  return fetch(`${API_URL_USERS}${userId}`)\n    .then(prepareResponse)\n    .then(getData);\n}\n\nconst prepareResponse = response => response.json();\nconst getData = result => result.data;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport './CurrentUser.scss';\n\nimport { getUser } from '../../api/api';\n\nexport class CurrentUser extends PureComponent {\n  state = {\n    user: {},\n  }\n\n  async componentDidMount() {\n    const user = await getUser(this.props.userId);\n\n    this.setState({ user });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.userId !== prevProps.userId) {\n      getUser(this.props.userId)\n        .then(data => this.setState({ user: data }));\n    }\n  }\n\n  render() {\n    const { handleUser } = this.props;\n    const { name, email, phone, id } = this.state.user;\n\n    return (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>\n            Selected user:\n            {id}\n          </span>\n        </h2>\n\n        <h3 className=\"CurrentUser__name\">{name}</h3>\n        <p className=\"CurrentUser__email\">{email}</p>\n        <p className=\"CurrentUser__phone\">{phone}</p>\n\n        <button\n          className=\"button clear-button\"\n          type=\"button\"\n          onClick={() => handleUser(0)}\n        >\n          Clear\n        </button>\n      </div>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  handleUser: PropTypes.func.isRequired,\n  userId: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\n\nimport { getToDos } from './api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n    selectedTask: '',\n    query: '',\n    isTaskDone: '',\n  };\n\n  async componentDidMount() {\n    const todos = await getToDos();\n\n    this.setState({ todos });\n  }\n\n  handleUser = (selectedUserId, selectedTask = '') => {\n    this.setState({\n      selectedUserId, selectedTask,\n    });\n  }\n\n  handleStatus = (event) => {\n    this.setState({\n      isTaskDone: event.target.value,\n    });\n  }\n\n  checkQuery = (event) => {\n    this.setState({\n      query: event.target.value.toLowerCase(),\n    });\n  }\n\n  render() {\n    const { handleUser, checkQuery, handleStatus, state } = this;\n    const { selectedUserId } = state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            handleUser={handleUser}\n            handleStatus={handleStatus}\n            checkQuery={checkQuery}\n            {...state}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {!selectedUserId\n              ? 'No user selected'\n              : (\n                <CurrentUser\n                  userId={selectedUserId}\n                  handleUser={handleUser}\n                />\n              )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}